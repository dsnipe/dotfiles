if &compatible
  set nocompatible
end

filetype off
set rtp+=~/.vim/bundle/Vundle.vim/
call vundle#begin()

let b:plugins=expand("~/.vim/autoload/plug.vim", 1)
let g:local = expand("~/.vimrc.local", 1)

if !filereadable(b:plugins)
  silent !mkdir -p ~/.vim/autoload
  silent !mkdir -p ~/.vim/plugin
  echo "Installing plugin manager"
  if executable('curl')
    execute '!curl -kfLo '. b:plugins .' https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  endif
  execute 'source' b:plugins
 endif

call plug#begin('~/.vim/bundle')
" Let Vundle manage Vundle
Plug 'gmarik/Vundle.vim'

" Colorschcemes
Plug 'w0ng/vim-hybrid'

" Define bundles via Github repos
Plug 'christoomey/vim-run-interactive'
Plug 'pbrisbin/vim-mkdir'
Plug 'scrooloose/syntastic'
Plug 'tpope/vim-endwise'
Plug 'tpope/vim-eunuch'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-repeat'
Plug 'tpope/vim-surround'
Plug 'vim-scripts/ctags.vim'
Plug 'vim-scripts/matchit.zip'
Plug 'vim-scripts/tComment'
Plug 'vim-scripts/sudo.vim'
Plug 'vim-scripts/ZoomWin'
Plug 'vim-scripts/IndexedSearch'
" Plug 'bling/vim-airline'
Plug 'itchyny/lightline.vim'
Plug 'ConradIrwin/vim-bracketed-paste'  " Automatic enable paste mode on pasting
Plug 'airblade/vim-gitgutter'  " Show files modifications, using git
Plug 'jiangmiao/auto-pairs'    " Autopairing for brackets, etc.
Plug 'AndrewRadev/splitjoin.vim'  " split (gS) and join (gJ) statements
Plug 'terryma/vim-multiple-cursors'

" Unite and other 
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'garbas/vim-snipmate'
Plug 'honza/vim-snippets'

" File operations and search {{{
Plug 'mileszs/ack.vim'
Plug 'scrooloose/nerdtree'
Plug 'jistr/vim-nerdtree-tabs'
Plug 'ctrlpvim/ctrlp.vim'
" }}}

" Languages specific plugins {{{
Plug 'vim-scripts/nginx.vim'
Plug 'kchmck/vim-coffee-script'
Plug 'slim-template/vim-slim'
Plug 'thoughtbot/vim-rspec'
Plug 'tpope/vim-bundler'
Plug 'tpope/vim-rails'
Plug 'vim-ruby/vim-ruby'
" }}}

if filereadable(expand("~/.vimrc.bundles.local"))
  source ~/.vimrc.bundles.local
endif

call plug#end()
filetype on

